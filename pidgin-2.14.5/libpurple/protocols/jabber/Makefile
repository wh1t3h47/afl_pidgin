# Makefile.in generated by automake 1.16.3 from Makefile.am.
# libpurple/protocols/jabber/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/pidgin
pkgincludedir = $(includedir)/pidgin
pkglibdir = $(libdir)/pidgin
pkglibexecdir = $(libexecdir)/pidgin
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
am__append_1 = auth_cyrus.c
subdir = libpurple/protocols/jabber
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkgdir)"
LTLIBRARIES = $(noinst_LTLIBRARIES) $(pkg_LTLIBRARIES)
am__DEPENDENCIES_1 =
libjabber_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__libjabber_la_SOURCES_DIST = adhoccommands.c adhoccommands.h auth.c \
	auth.h auth_digest_md5.c auth_digest_md5.h auth_plain.c \
	auth_scram.c auth_scram.h buddy.c buddy.h bosh.c bosh.h caps.c \
	caps.h chat.c chat.h data.c data.h disco.c disco.h \
	google/gmail.c google/gmail.h google/google.c google/google.h \
	google/google_presence.c google/google_presence.h \
	google/google_roster.c google/google_roster.h \
	google/google_session.c google/google_session.h \
	google/jingleinfo.c google/jingleinfo.h google/relay.c \
	google/relay.h ibb.c ibb.h iq.c iq.h jabber.c jabber.h \
	jingle/jingle.c jingle/jingle.h jingle/content.c \
	jingle/content.h jingle/iceudp.c jingle/iceudp.h \
	jingle/rawudp.c jingle/rawudp.h jingle/rtp.c jingle/rtp.h \
	jingle/session.c jingle/session.h jingle/transport.c \
	jingle/transport.h jutil.c jutil.h message.c message.h \
	namespaces.h oob.c oob.h parser.c parser.h pep.c pep.h ping.c \
	ping.h presence.c presence.h roster.c roster.h si.c si.h \
	stream_management.c stream_management.h useravatar.c \
	useravatar.h usermood.c usermood.h usernick.c usernick.h \
	usertune.c usertune.h xdata.c xdata.h auth_cyrus.c libxmpp.c
am__objects_1 = libjabber_la-auth_cyrus.lo
am__objects_2 = libjabber_la-adhoccommands.lo libjabber_la-auth.lo \
	libjabber_la-auth_digest_md5.lo libjabber_la-auth_plain.lo \
	libjabber_la-auth_scram.lo libjabber_la-buddy.lo \
	libjabber_la-bosh.lo libjabber_la-caps.lo libjabber_la-chat.lo \
	libjabber_la-data.lo libjabber_la-disco.lo \
	libjabber_la-gmail.lo libjabber_la-google.lo \
	libjabber_la-google_presence.lo libjabber_la-google_roster.lo \
	libjabber_la-google_session.lo libjabber_la-jingleinfo.lo \
	libjabber_la-relay.lo libjabber_la-ibb.lo libjabber_la-iq.lo \
	libjabber_la-jabber.lo libjabber_la-jingle.lo \
	libjabber_la-content.lo libjabber_la-iceudp.lo \
	libjabber_la-rawudp.lo libjabber_la-rtp.lo \
	libjabber_la-session.lo libjabber_la-transport.lo \
	libjabber_la-jutil.lo libjabber_la-message.lo \
	libjabber_la-oob.lo libjabber_la-parser.lo libjabber_la-pep.lo \
	libjabber_la-ping.lo libjabber_la-presence.lo \
	libjabber_la-roster.lo libjabber_la-si.lo \
	libjabber_la-stream_management.lo libjabber_la-useravatar.lo \
	libjabber_la-usermood.lo libjabber_la-usernick.lo \
	libjabber_la-usertune.lo libjabber_la-xdata.lo \
	$(am__objects_1)
am_libjabber_la_OBJECTS = $(am__objects_2)
#am_libjabber_la_OBJECTS = $(am__objects_2) \
#	libjabber_la-libxmpp.lo
libjabber_la_OBJECTS = $(am_libjabber_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libjabber_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libjabber_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_libjabber_la_rpath = -rpath $(pkgdir)
#am_libjabber_la_rpath =
libxmpp_la_DEPENDENCIES = libjabber.la
am__libxmpp_la_SOURCES_DIST = libxmpp.c
am_libxmpp_la_OBJECTS = libxmpp.lo
libxmpp_la_OBJECTS = $(am_libxmpp_la_OBJECTS)
libxmpp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libxmpp_la_LDFLAGS) $(LDFLAGS) -o $@
am_libxmpp_la_rpath = -rpath $(pkgdir)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/libjabber_la-adhoccommands.Plo \
	./$(DEPDIR)/libjabber_la-auth.Plo \
	./$(DEPDIR)/libjabber_la-auth_cyrus.Plo \
	./$(DEPDIR)/libjabber_la-auth_digest_md5.Plo \
	./$(DEPDIR)/libjabber_la-auth_plain.Plo \
	./$(DEPDIR)/libjabber_la-auth_scram.Plo \
	./$(DEPDIR)/libjabber_la-bosh.Plo \
	./$(DEPDIR)/libjabber_la-buddy.Plo \
	./$(DEPDIR)/libjabber_la-caps.Plo \
	./$(DEPDIR)/libjabber_la-chat.Plo \
	./$(DEPDIR)/libjabber_la-content.Plo \
	./$(DEPDIR)/libjabber_la-data.Plo \
	./$(DEPDIR)/libjabber_la-disco.Plo \
	./$(DEPDIR)/libjabber_la-gmail.Plo \
	./$(DEPDIR)/libjabber_la-google.Plo \
	./$(DEPDIR)/libjabber_la-google_presence.Plo \
	./$(DEPDIR)/libjabber_la-google_roster.Plo \
	./$(DEPDIR)/libjabber_la-google_session.Plo \
	./$(DEPDIR)/libjabber_la-ibb.Plo \
	./$(DEPDIR)/libjabber_la-iceudp.Plo \
	./$(DEPDIR)/libjabber_la-iq.Plo \
	./$(DEPDIR)/libjabber_la-jabber.Plo \
	./$(DEPDIR)/libjabber_la-jingle.Plo \
	./$(DEPDIR)/libjabber_la-jingleinfo.Plo \
	./$(DEPDIR)/libjabber_la-jutil.Plo \
	./$(DEPDIR)/libjabber_la-libxmpp.Plo \
	./$(DEPDIR)/libjabber_la-message.Plo \
	./$(DEPDIR)/libjabber_la-oob.Plo \
	./$(DEPDIR)/libjabber_la-parser.Plo \
	./$(DEPDIR)/libjabber_la-pep.Plo \
	./$(DEPDIR)/libjabber_la-ping.Plo \
	./$(DEPDIR)/libjabber_la-presence.Plo \
	./$(DEPDIR)/libjabber_la-rawudp.Plo \
	./$(DEPDIR)/libjabber_la-relay.Plo \
	./$(DEPDIR)/libjabber_la-roster.Plo \
	./$(DEPDIR)/libjabber_la-rtp.Plo \
	./$(DEPDIR)/libjabber_la-session.Plo \
	./$(DEPDIR)/libjabber_la-si.Plo \
	./$(DEPDIR)/libjabber_la-stream_management.Plo \
	./$(DEPDIR)/libjabber_la-transport.Plo \
	./$(DEPDIR)/libjabber_la-useravatar.Plo \
	./$(DEPDIR)/libjabber_la-usermood.Plo \
	./$(DEPDIR)/libjabber_la-usernick.Plo \
	./$(DEPDIR)/libjabber_la-usertune.Plo \
	./$(DEPDIR)/libjabber_la-xdata.Plo ./$(DEPDIR)/libxmpp.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libjabber_la_SOURCES) $(libxmpp_la_SOURCES)
DIST_SOURCES = $(am__libjabber_la_SOURCES_DIST) \
	$(am__libxmpp_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/skid/My_Code/afl_pidgin/pidgin-2.14.5/missing' aclocal-1.16
ALLOCA = 
ALL_LINGUAS = af am ar ar_SA as ast az be@latin bg bn_IN bn br brx bs ca ca@valencia cs da de dz el en_AU en_CA en_GB eo es_AR es et eu fa fi fr ga gl gu he hi hr hu id it ja ka kk km kn ko ks ku_IQ ku lt lv mai mhr mk ml mn mr ms_MY my_MM nb ne nl nn oc or pa pl ps pt_BR pt ro ru sd si sk sl sq sr@latin sr sv sw ta te th tr tt uk ur uz vi xh zh_CN zh_HK zh_TW
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} '/home/skid/My_Code/afl_pidgin/pidgin-2.14.5/missing' autoconf
AUTOHEADER = ${SHELL} '/home/skid/My_Code/afl_pidgin/pidgin-2.14.5/missing' autoheader
AUTOMAKE = ${SHELL} '/home/skid/My_Code/afl_pidgin/pidgin-2.14.5/missing' automake-1.16
AVAHI_CFLAGS = -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
AVAHI_LIBS = -lavahi-common -lavahi-client -lavahi-glib -lglib-2.0
AWK = gawk
CATALOGS =  af.gmo am.gmo ar.gmo ar_SA.gmo as.gmo ast.gmo az.gmo be@latin.gmo bg.gmo bn_IN.gmo bn.gmo br.gmo brx.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo da.gmo de.gmo dz.gmo el.gmo en_AU.gmo en_CA.gmo en_GB.gmo eo.gmo es_AR.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo id.gmo it.gmo ja.gmo ka.gmo kk.gmo km.gmo kn.gmo ko.gmo ks.gmo ku_IQ.gmo ku.gmo lt.gmo lv.gmo mai.gmo mhr.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms_MY.gmo my_MM.gmo nb.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt_BR.gmo pt.gmo ro.gmo ru.gmo sd.gmo si.gmo sk.gmo sl.gmo sq.gmo sr@latin.gmo sr.gmo sv.gmo sw.gmo ta.gmo te.gmo th.gmo tr.gmo tt.gmo uk.gmo ur.gmo uz.gmo vi.gmo xh.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
CATOBJEXT = .gmo
CC = afl-clang-fast
CCDEPMODE = depmode=gcc3
CFLAGS = -g -fsanitize=address -g -O0
CHECK_CFLAGS = 
CHECK_LIBS = 
CPP = afl-clang-fast -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DBUS_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
DBUS_LIBS = -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0
DBUS_SERVICES_DIR = /usr/share/dbus-1/services
DEBUG_CFLAGS = -Wall -DPURPLE_DISABLE_DEPRECATED -DPIDGIN_DISABLE_DEPRECATED -DFINCH_DISABLE_DEPRECATED -DGNT_DISABLE_DEPRECATED -Waggregate-return  -Wdeclaration-after-statement -Wendif-labels -Werror-implicit-function-declaration -Wextra -Wno-unused-parameter -Wformat-security -Werror=format-security -Winit-self -Wmissing-declarations -Wmissing-noreturn -Wmissing-prototypes -Wpointer-arith -Wundef -Wp,-D_FORTIFY_SOURCE=2
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOT = true
DOXYGEN = true
DSYMUTIL = 
DUMPBIN = 
DYNALOADER_A = 
DYNAMIC_PRPLS = bonjour gg irc jabber novell sametime  simple zephyr
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EVOLUTION_ADDRESSBOOK_CFLAGS = -pthread -I/usr/include/evolution-data-server -I/usr/include/libsecret-1 -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/nss -I/usr/include/nspr
EVOLUTION_ADDRESSBOOK_LIBS = -lebook-1.2 -ledata-book-1.2 -lebackend-1.2 -lebook-contacts-1.2 -ledataserver-1.2 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lsecret-1 -lxml2 -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lnss3 -lnssutil3 -lsmime3 -lssl3 -lplds4 -lplc4 -lnspr4
EXEEXT = 
FARSTREAM_CFLAGS = -pthread -I/usr/include/farstream-0.2 -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
FARSTREAM_LIBS = -lfarstream-0.2 -lgstbase-1.0 -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0
FGREP = /usr/bin/grep -F
GCONFTOOL = no
GCONF_SCHEMA_CONFIG_SOURCE = 
GCONF_SCHEMA_FILE_DIR = $(sysconfdir)/gconf/schemas
GETTEXT_PACKAGE = pidgin
GIO_UNIX_CFLAGS = -pthread -I/usr/include/gio-unix-2.0 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GIO_UNIX_LIBS = -lgio-2.0 -lgobject-2.0 -lglib-2.0
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_GENMARSHAL = /usr/bin/glib-genmarshal
GLIB_LIBS = -lgobject-2.0 -Wl,--export-dynamic -lgmodule-2.0 -pthread -lgthread-2.0 -pthread -lglib-2.0
GMOFILES =  af.gmo am.gmo ar.gmo ar_SA.gmo as.gmo ast.gmo az.gmo be@latin.gmo bg.gmo bn_IN.gmo bn.gmo br.gmo brx.gmo bs.gmo ca.gmo ca@valencia.gmo cs.gmo da.gmo de.gmo dz.gmo el.gmo en_AU.gmo en_CA.gmo en_GB.gmo eo.gmo es_AR.gmo es.gmo et.gmo eu.gmo fa.gmo fi.gmo fr.gmo ga.gmo gl.gmo gu.gmo he.gmo hi.gmo hr.gmo hu.gmo id.gmo it.gmo ja.gmo ka.gmo kk.gmo km.gmo kn.gmo ko.gmo ks.gmo ku_IQ.gmo ku.gmo lt.gmo lv.gmo mai.gmo mhr.gmo mk.gmo ml.gmo mn.gmo mr.gmo ms_MY.gmo my_MM.gmo nb.gmo ne.gmo nl.gmo nn.gmo oc.gmo or.gmo pa.gmo pl.gmo ps.gmo pt_BR.gmo pt.gmo ro.gmo ru.gmo sd.gmo si.gmo sk.gmo sl.gmo sq.gmo sr@latin.gmo sr.gmo sv.gmo sw.gmo ta.gmo te.gmo th.gmo tr.gmo tt.gmo uk.gmo ur.gmo uz.gmo vi.gmo xh.gmo zh_CN.gmo zh_HK.gmo zh_TW.gmo
GMSGFMT = /usr/bin/msgfmt
GNT_CFLAGS = -I/usr/include/ncursesw/
GNT_LIBS = -lncursesw -lpanelw
GNUTLS_2_10_CFLAGS = 
GNUTLS_2_10_LIBS = 
GNUTLS_CFLAGS = 
GNUTLS_LIBS =  -lgnutls
GREP = /usr/bin/grep
GSTAPP_CFLAGS = -pthread -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GSTAPP_LIBS = -lgstapp-1.0 -lgstbase-1.0 -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0
GSTINTERFACES_CFLAGS = 
GSTINTERFACES_LIBS = 
GSTREAMER_CFLAGS = -pthread -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GSTREAMER_LIBS = -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0
GSTREAMER_VER = 1.0
GSTVIDEO_CFLAGS = -pthread -I/usr/include/gstreamer-1.0 -I/usr/include/orc-0.4 -I/usr/include/gstreamer-1.0 -I/usr/include/x86_64-linux-gnu -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GSTVIDEO_LIBS = -lgstvideo-1.0 -lgstbase-1.0 -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0
GTKSPELL_CFLAGS = -pthread -I/usr/include/gtkspell-2.0 -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
GTKSPELL_LIBS = -lgtkspell -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype
IDN_CFLAGS = 
IDN_LIBS = -lidn
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
INTL_MACOSX_LIBS = 
KRB4_CFLAGS = 
KRB4_LDFLAGS = 
KRB4_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDADD = 
LDFLAGS = -fsanitize=address
LIBGADU_CFLAGS = -I/usr/include/p11-kit-1
LIBGADU_LIBS = -lgadu
LIBGNT_CFLAGS = -pthread -I/usr/include/gnt -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
LIBGNT_LIBS = -lgnt -lglib-2.0
LIBM = -lm
LIBOBJS = 
LIBPERL_A = 
LIBS = -lgadu -lnsl -lresolv 
LIBTOOL = $(SHELL) $(top_builddir)/libtool --silent
LIBXML_CFLAGS = -I/usr/include/libxml2
LIBXML_LIBS = -lxml2
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/home/skid/My_Code/afl_pidgin/pidgin-2.14.5/missing' makeinfo
MANIFEST_TOOL = :
MEANWHILE_CFLAGS = -I/usr/include/meanwhile -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
MEANWHILE_LIBS = -lmeanwhile -lglib-2.0
MKDIR_P = /usr/bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MONO_CFLAGS = 
MONO_LIBS = 
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NETWORKMANAGER_CFLAGS = -pthread -I/usr/include/libnm -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
NETWORKMANAGER_LIBS = -lnm -lgio-2.0 -lgobject-2.0 -lglib-2.0
NM = /usr/bin/nm -B
NMEDIT = 
NSS_CFLAGS = -I/usr/include/nss -I/usr/include/nspr
NSS_LIBS = -lnss3 -lnssutil3 -lsmime3 -lssl3 -lplds4 -lplc4 -lnspr4
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = pidgin
PACKAGE_BUGREPORT = devel@pidgin.im
PACKAGE_NAME = pidgin
PACKAGE_STRING = pidgin 2.14.5
PACKAGE_TARNAME = pidgin
PACKAGE_URL = 
PACKAGE_VERSION = 2.14.5
PANGO_CFLAGS = -pthread -I/usr/include/pango-1.0 -I/usr/include/libmount -I/usr/include/blkid -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16
PANGO_LIBS = -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz
PATH_SEPARATOR = :
PERL = perl
PERL_CFLAGS =  -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fwrapv -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64  -I/usr/lib/x86_64-linux-gnu/perl/5.32/CORE 
PERL_LIBS = -Wl,-E -fstack-protector-strong -L/usr/local/lib -L/usr/lib/x86_64-linux-gnu/perl/5.32/CORE -lperl -ldl -lm -lpthread -lcrypt
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PLUGINS_DEFINE = #define PURPLE_PLUGINS 1
POFILES =  af.po am.po ar.po ar_SA.po as.po ast.po az.po be@latin.po bg.po bn_IN.po bn.po br.po brx.po bs.po ca.po ca@valencia.po cs.po da.po de.po dz.po el.po en_AU.po en_CA.po en_GB.po eo.po es_AR.po es.po et.po eu.po fa.po fi.po fr.po ga.po gl.po gu.po he.po hi.po hr.po hu.po id.po it.po ja.po ka.po kk.po km.po kn.po ko.po ks.po ku_IQ.po ku.po lt.po lv.po mai.po mhr.po mk.po ml.po mn.po mr.po ms_MY.po my_MM.po nb.po ne.po nl.po nn.po oc.po or.po pa.po pl.po ps.po pt_BR.po pt.po ro.po ru.po sd.po si.po sk.po sl.po sq.po sr@latin.po sr.po sv.po sw.po ta.po te.po th.po tr.po tt.po uk.po ur.po uz.po vi.po xh.po zh_CN.po zh_HK.po zh_TW.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PURPLE_LT_VERSION_INFO = 14:5:14
PURPLE_MAJOR_VERSION = 2
PURPLE_MICRO_VERSION = 5
PURPLE_MINOR_VERSION = 14
PURPLE_VERSION = purple_display_version
PYTHON3 = /usr/bin/python3
RANLIB = ranlib
SASL_LIBS = -lsasl2
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
SILC_CFLAGS = 
SILC_LIBS = 
SM_LIBS =  -lSM -lICE
SQLITE3_CFLAGS = 
SQLITE3_LIBS = 
SSL_CERTIFICATES_DIR = 
STATIC_LINK_LIBS = 
STATIC_PRPLS = 
STRIP = strip
TCL_CFLAGS = -I/usr/include/tcl8.6 -I/usr/include -fno-strict-aliasing
TCL_LIBS = -L/usr/lib/x86_64-linux-gnu -ltcl8.6
TK_LIBS = -L/usr/lib/x86_64-linux-gnu -ltk8.6
UNITY_CFLAGS = 
UNITY_LIBS = 
USES_MM_CHAT_SECTION = 
USE_NLS = yes
VERSION = 2.14.5
X11_CFLAGS = 
X11_LIBS = -lX11
XGETTEXT = /usr/bin/xgettext
XMKMF = 
XSLTPROC = true
XSS_LIBS = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
ZEPHYR_CFLAGS = 
ZEPHYR_LDFLAGS = 
ZEPHYR_LIBS = 
abs_builddir = /home/skid/My_Code/afl_pidgin/pidgin-2.14.5/libpurple/protocols/jabber
abs_srcdir = /home/skid/My_Code/afl_pidgin/pidgin-2.14.5/libpurple/protocols/jabber
abs_top_builddir = /home/skid/My_Code/afl_pidgin/pidgin-2.14.5
abs_top_srcdir = /home/skid/My_Code/afl_pidgin/pidgin-2.14.5
ac_ct_AR = ar
ac_ct_CC = afl-clang-fast
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_dbus = yes
enable_devhelp = yes
enable_dot = yes
enable_doxygen = yes
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/skid/My_Code/afl_pidgin/pidgin-2.14.5/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
perlpath = /usr/bin/perl
pidginpath = /usr/bin/pidgin
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sedpath = /usr/bin/sed
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
EXTRA_DIST = \
	Makefile.mingw \
	win32/posix.uname.c \
	win32/utsname.h

pkgdir = $(libdir)/purple-$(PURPLE_MAJOR_VERSION)
JABBERSOURCES = adhoccommands.c adhoccommands.h auth.c auth.h \
	auth_digest_md5.c auth_digest_md5.h auth_plain.c auth_scram.c \
	auth_scram.h buddy.c buddy.h bosh.c bosh.h caps.c caps.h \
	chat.c chat.h data.c data.h disco.c disco.h google/gmail.c \
	google/gmail.h google/google.c google/google.h \
	google/google_presence.c google/google_presence.h \
	google/google_roster.c google/google_roster.h \
	google/google_session.c google/google_session.h \
	google/jingleinfo.c google/jingleinfo.h google/relay.c \
	google/relay.h ibb.c ibb.h iq.c iq.h jabber.c jabber.h \
	jingle/jingle.c jingle/jingle.h jingle/content.c \
	jingle/content.h jingle/iceudp.c jingle/iceudp.h \
	jingle/rawudp.c jingle/rawudp.h jingle/rtp.c jingle/rtp.h \
	jingle/session.c jingle/session.h jingle/transport.c \
	jingle/transport.h jutil.c jutil.h message.c message.h \
	namespaces.h oob.c oob.h parser.c parser.h pep.c pep.h ping.c \
	ping.h presence.c presence.h roster.c roster.h si.c si.h \
	stream_management.c stream_management.h useravatar.c \
	useravatar.h usermood.c usermood.h usernick.c usernick.h \
	usertune.c usertune.h xdata.c xdata.h $(am__append_1)
AM_CFLAGS = $(st)
libxmpp_la_LDFLAGS = -module -avoid-version
st = 
#st = -DPURPLE_STATIC_PRPL
#noinst_LTLIBRARIES = libjabber.la
libjabber_la_SOURCES = $(JABBERSOURCES)
#libjabber_la_SOURCES = $(JABBERSOURCES) libxmpp.c
#libjabber_la_CFLAGS = $(AM_CFLAGS)
pkg_LTLIBRARIES = libjabber.la libxmpp.la
libjabber_la_LIBADD = $(GLIB_LIBS) $(SASL_LIBS) $(LIBXML_LIBS) $(IDN_LIBS)\
	$(FARSIGHT_LIBS) \
	$(GSTREAMER_LIBS) \
	$(GSTINTERFACES_LIBS)

libxmpp_la_SOURCES = libxmpp.c
libxmpp_la_LIBADD = libjabber.la
AM_CPPFLAGS = \
	-I$(top_srcdir)/libpurple \
	-I$(top_builddir)/libpurple \
	$(DEBUG_CFLAGS) \
	$(GLIB_CFLAGS) \
	$(IDN_CFLAGS) \
	$(LIBXML_CFLAGS) \
	$(FARSIGHT_CFLAGS) \
	$(GSTREAMER_CFLAGS) \
	$(GSTINTERFACES_CFLAGS)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libpurple/protocols/jabber/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libpurple/protocols/jabber/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-pkgLTLIBRARIES: $(pkg_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkg_LTLIBRARIES)'; test -n "$(pkgdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkgdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkgdir)"; \
	}

uninstall-pkgLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkg_LTLIBRARIES)'; test -n "$(pkgdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkgdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkgdir)/$$f"; \
	done

clean-pkgLTLIBRARIES:
	-test -z "$(pkg_LTLIBRARIES)" || rm -f $(pkg_LTLIBRARIES)
	@list='$(pkg_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libjabber.la: $(libjabber_la_OBJECTS) $(libjabber_la_DEPENDENCIES) $(EXTRA_libjabber_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libjabber_la_LINK) $(am_libjabber_la_rpath) $(libjabber_la_OBJECTS) $(libjabber_la_LIBADD) $(LIBS)

libxmpp.la: $(libxmpp_la_OBJECTS) $(libxmpp_la_DEPENDENCIES) $(EXTRA_libxmpp_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libxmpp_la_LINK) $(am_libxmpp_la_rpath) $(libxmpp_la_OBJECTS) $(libxmpp_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libjabber_la-adhoccommands.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-auth.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-auth_cyrus.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-auth_digest_md5.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-auth_plain.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-auth_scram.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-bosh.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-buddy.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-caps.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-chat.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-content.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-data.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-disco.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-gmail.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-google.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-google_presence.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-google_roster.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-google_session.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-ibb.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-iceudp.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-iq.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-jabber.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-jingle.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-jingleinfo.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-jutil.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-libxmpp.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-message.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-oob.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-parser.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-pep.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-ping.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-presence.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-rawudp.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-relay.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-roster.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-rtp.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-session.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-si.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-stream_management.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-transport.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-useravatar.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-usermood.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-usernick.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-usertune.Plo # am--include-marker
include ./$(DEPDIR)/libjabber_la-xdata.Plo # am--include-marker
include ./$(DEPDIR)/libxmpp.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libjabber_la-adhoccommands.lo: adhoccommands.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-adhoccommands.lo -MD -MP -MF $(DEPDIR)/libjabber_la-adhoccommands.Tpo -c -o libjabber_la-adhoccommands.lo `test -f 'adhoccommands.c' || echo '$(srcdir)/'`adhoccommands.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-adhoccommands.Tpo $(DEPDIR)/libjabber_la-adhoccommands.Plo
#	$(AM_V_CC)source='adhoccommands.c' object='libjabber_la-adhoccommands.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-adhoccommands.lo `test -f 'adhoccommands.c' || echo '$(srcdir)/'`adhoccommands.c

libjabber_la-auth.lo: auth.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth.lo -MD -MP -MF $(DEPDIR)/libjabber_la-auth.Tpo -c -o libjabber_la-auth.lo `test -f 'auth.c' || echo '$(srcdir)/'`auth.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-auth.Tpo $(DEPDIR)/libjabber_la-auth.Plo
#	$(AM_V_CC)source='auth.c' object='libjabber_la-auth.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth.lo `test -f 'auth.c' || echo '$(srcdir)/'`auth.c

libjabber_la-auth_digest_md5.lo: auth_digest_md5.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth_digest_md5.lo -MD -MP -MF $(DEPDIR)/libjabber_la-auth_digest_md5.Tpo -c -o libjabber_la-auth_digest_md5.lo `test -f 'auth_digest_md5.c' || echo '$(srcdir)/'`auth_digest_md5.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-auth_digest_md5.Tpo $(DEPDIR)/libjabber_la-auth_digest_md5.Plo
#	$(AM_V_CC)source='auth_digest_md5.c' object='libjabber_la-auth_digest_md5.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth_digest_md5.lo `test -f 'auth_digest_md5.c' || echo '$(srcdir)/'`auth_digest_md5.c

libjabber_la-auth_plain.lo: auth_plain.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth_plain.lo -MD -MP -MF $(DEPDIR)/libjabber_la-auth_plain.Tpo -c -o libjabber_la-auth_plain.lo `test -f 'auth_plain.c' || echo '$(srcdir)/'`auth_plain.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-auth_plain.Tpo $(DEPDIR)/libjabber_la-auth_plain.Plo
#	$(AM_V_CC)source='auth_plain.c' object='libjabber_la-auth_plain.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth_plain.lo `test -f 'auth_plain.c' || echo '$(srcdir)/'`auth_plain.c

libjabber_la-auth_scram.lo: auth_scram.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth_scram.lo -MD -MP -MF $(DEPDIR)/libjabber_la-auth_scram.Tpo -c -o libjabber_la-auth_scram.lo `test -f 'auth_scram.c' || echo '$(srcdir)/'`auth_scram.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-auth_scram.Tpo $(DEPDIR)/libjabber_la-auth_scram.Plo
#	$(AM_V_CC)source='auth_scram.c' object='libjabber_la-auth_scram.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth_scram.lo `test -f 'auth_scram.c' || echo '$(srcdir)/'`auth_scram.c

libjabber_la-buddy.lo: buddy.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-buddy.lo -MD -MP -MF $(DEPDIR)/libjabber_la-buddy.Tpo -c -o libjabber_la-buddy.lo `test -f 'buddy.c' || echo '$(srcdir)/'`buddy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-buddy.Tpo $(DEPDIR)/libjabber_la-buddy.Plo
#	$(AM_V_CC)source='buddy.c' object='libjabber_la-buddy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-buddy.lo `test -f 'buddy.c' || echo '$(srcdir)/'`buddy.c

libjabber_la-bosh.lo: bosh.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-bosh.lo -MD -MP -MF $(DEPDIR)/libjabber_la-bosh.Tpo -c -o libjabber_la-bosh.lo `test -f 'bosh.c' || echo '$(srcdir)/'`bosh.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-bosh.Tpo $(DEPDIR)/libjabber_la-bosh.Plo
#	$(AM_V_CC)source='bosh.c' object='libjabber_la-bosh.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-bosh.lo `test -f 'bosh.c' || echo '$(srcdir)/'`bosh.c

libjabber_la-caps.lo: caps.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-caps.lo -MD -MP -MF $(DEPDIR)/libjabber_la-caps.Tpo -c -o libjabber_la-caps.lo `test -f 'caps.c' || echo '$(srcdir)/'`caps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-caps.Tpo $(DEPDIR)/libjabber_la-caps.Plo
#	$(AM_V_CC)source='caps.c' object='libjabber_la-caps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-caps.lo `test -f 'caps.c' || echo '$(srcdir)/'`caps.c

libjabber_la-chat.lo: chat.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-chat.lo -MD -MP -MF $(DEPDIR)/libjabber_la-chat.Tpo -c -o libjabber_la-chat.lo `test -f 'chat.c' || echo '$(srcdir)/'`chat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-chat.Tpo $(DEPDIR)/libjabber_la-chat.Plo
#	$(AM_V_CC)source='chat.c' object='libjabber_la-chat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-chat.lo `test -f 'chat.c' || echo '$(srcdir)/'`chat.c

libjabber_la-data.lo: data.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-data.lo -MD -MP -MF $(DEPDIR)/libjabber_la-data.Tpo -c -o libjabber_la-data.lo `test -f 'data.c' || echo '$(srcdir)/'`data.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-data.Tpo $(DEPDIR)/libjabber_la-data.Plo
#	$(AM_V_CC)source='data.c' object='libjabber_la-data.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-data.lo `test -f 'data.c' || echo '$(srcdir)/'`data.c

libjabber_la-disco.lo: disco.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-disco.lo -MD -MP -MF $(DEPDIR)/libjabber_la-disco.Tpo -c -o libjabber_la-disco.lo `test -f 'disco.c' || echo '$(srcdir)/'`disco.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-disco.Tpo $(DEPDIR)/libjabber_la-disco.Plo
#	$(AM_V_CC)source='disco.c' object='libjabber_la-disco.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-disco.lo `test -f 'disco.c' || echo '$(srcdir)/'`disco.c

libjabber_la-gmail.lo: google/gmail.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-gmail.lo -MD -MP -MF $(DEPDIR)/libjabber_la-gmail.Tpo -c -o libjabber_la-gmail.lo `test -f 'google/gmail.c' || echo '$(srcdir)/'`google/gmail.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-gmail.Tpo $(DEPDIR)/libjabber_la-gmail.Plo
#	$(AM_V_CC)source='google/gmail.c' object='libjabber_la-gmail.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-gmail.lo `test -f 'google/gmail.c' || echo '$(srcdir)/'`google/gmail.c

libjabber_la-google.lo: google/google.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-google.lo -MD -MP -MF $(DEPDIR)/libjabber_la-google.Tpo -c -o libjabber_la-google.lo `test -f 'google/google.c' || echo '$(srcdir)/'`google/google.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-google.Tpo $(DEPDIR)/libjabber_la-google.Plo
#	$(AM_V_CC)source='google/google.c' object='libjabber_la-google.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-google.lo `test -f 'google/google.c' || echo '$(srcdir)/'`google/google.c

libjabber_la-google_presence.lo: google/google_presence.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-google_presence.lo -MD -MP -MF $(DEPDIR)/libjabber_la-google_presence.Tpo -c -o libjabber_la-google_presence.lo `test -f 'google/google_presence.c' || echo '$(srcdir)/'`google/google_presence.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-google_presence.Tpo $(DEPDIR)/libjabber_la-google_presence.Plo
#	$(AM_V_CC)source='google/google_presence.c' object='libjabber_la-google_presence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-google_presence.lo `test -f 'google/google_presence.c' || echo '$(srcdir)/'`google/google_presence.c

libjabber_la-google_roster.lo: google/google_roster.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-google_roster.lo -MD -MP -MF $(DEPDIR)/libjabber_la-google_roster.Tpo -c -o libjabber_la-google_roster.lo `test -f 'google/google_roster.c' || echo '$(srcdir)/'`google/google_roster.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-google_roster.Tpo $(DEPDIR)/libjabber_la-google_roster.Plo
#	$(AM_V_CC)source='google/google_roster.c' object='libjabber_la-google_roster.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-google_roster.lo `test -f 'google/google_roster.c' || echo '$(srcdir)/'`google/google_roster.c

libjabber_la-google_session.lo: google/google_session.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-google_session.lo -MD -MP -MF $(DEPDIR)/libjabber_la-google_session.Tpo -c -o libjabber_la-google_session.lo `test -f 'google/google_session.c' || echo '$(srcdir)/'`google/google_session.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-google_session.Tpo $(DEPDIR)/libjabber_la-google_session.Plo
#	$(AM_V_CC)source='google/google_session.c' object='libjabber_la-google_session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-google_session.lo `test -f 'google/google_session.c' || echo '$(srcdir)/'`google/google_session.c

libjabber_la-jingleinfo.lo: google/jingleinfo.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-jingleinfo.lo -MD -MP -MF $(DEPDIR)/libjabber_la-jingleinfo.Tpo -c -o libjabber_la-jingleinfo.lo `test -f 'google/jingleinfo.c' || echo '$(srcdir)/'`google/jingleinfo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-jingleinfo.Tpo $(DEPDIR)/libjabber_la-jingleinfo.Plo
#	$(AM_V_CC)source='google/jingleinfo.c' object='libjabber_la-jingleinfo.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-jingleinfo.lo `test -f 'google/jingleinfo.c' || echo '$(srcdir)/'`google/jingleinfo.c

libjabber_la-relay.lo: google/relay.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-relay.lo -MD -MP -MF $(DEPDIR)/libjabber_la-relay.Tpo -c -o libjabber_la-relay.lo `test -f 'google/relay.c' || echo '$(srcdir)/'`google/relay.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-relay.Tpo $(DEPDIR)/libjabber_la-relay.Plo
#	$(AM_V_CC)source='google/relay.c' object='libjabber_la-relay.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-relay.lo `test -f 'google/relay.c' || echo '$(srcdir)/'`google/relay.c

libjabber_la-ibb.lo: ibb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-ibb.lo -MD -MP -MF $(DEPDIR)/libjabber_la-ibb.Tpo -c -o libjabber_la-ibb.lo `test -f 'ibb.c' || echo '$(srcdir)/'`ibb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-ibb.Tpo $(DEPDIR)/libjabber_la-ibb.Plo
#	$(AM_V_CC)source='ibb.c' object='libjabber_la-ibb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-ibb.lo `test -f 'ibb.c' || echo '$(srcdir)/'`ibb.c

libjabber_la-iq.lo: iq.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-iq.lo -MD -MP -MF $(DEPDIR)/libjabber_la-iq.Tpo -c -o libjabber_la-iq.lo `test -f 'iq.c' || echo '$(srcdir)/'`iq.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-iq.Tpo $(DEPDIR)/libjabber_la-iq.Plo
#	$(AM_V_CC)source='iq.c' object='libjabber_la-iq.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-iq.lo `test -f 'iq.c' || echo '$(srcdir)/'`iq.c

libjabber_la-jabber.lo: jabber.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-jabber.lo -MD -MP -MF $(DEPDIR)/libjabber_la-jabber.Tpo -c -o libjabber_la-jabber.lo `test -f 'jabber.c' || echo '$(srcdir)/'`jabber.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-jabber.Tpo $(DEPDIR)/libjabber_la-jabber.Plo
#	$(AM_V_CC)source='jabber.c' object='libjabber_la-jabber.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-jabber.lo `test -f 'jabber.c' || echo '$(srcdir)/'`jabber.c

libjabber_la-jingle.lo: jingle/jingle.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-jingle.lo -MD -MP -MF $(DEPDIR)/libjabber_la-jingle.Tpo -c -o libjabber_la-jingle.lo `test -f 'jingle/jingle.c' || echo '$(srcdir)/'`jingle/jingle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-jingle.Tpo $(DEPDIR)/libjabber_la-jingle.Plo
#	$(AM_V_CC)source='jingle/jingle.c' object='libjabber_la-jingle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-jingle.lo `test -f 'jingle/jingle.c' || echo '$(srcdir)/'`jingle/jingle.c

libjabber_la-content.lo: jingle/content.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-content.lo -MD -MP -MF $(DEPDIR)/libjabber_la-content.Tpo -c -o libjabber_la-content.lo `test -f 'jingle/content.c' || echo '$(srcdir)/'`jingle/content.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-content.Tpo $(DEPDIR)/libjabber_la-content.Plo
#	$(AM_V_CC)source='jingle/content.c' object='libjabber_la-content.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-content.lo `test -f 'jingle/content.c' || echo '$(srcdir)/'`jingle/content.c

libjabber_la-iceudp.lo: jingle/iceudp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-iceudp.lo -MD -MP -MF $(DEPDIR)/libjabber_la-iceudp.Tpo -c -o libjabber_la-iceudp.lo `test -f 'jingle/iceudp.c' || echo '$(srcdir)/'`jingle/iceudp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-iceudp.Tpo $(DEPDIR)/libjabber_la-iceudp.Plo
#	$(AM_V_CC)source='jingle/iceudp.c' object='libjabber_la-iceudp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-iceudp.lo `test -f 'jingle/iceudp.c' || echo '$(srcdir)/'`jingle/iceudp.c

libjabber_la-rawudp.lo: jingle/rawudp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-rawudp.lo -MD -MP -MF $(DEPDIR)/libjabber_la-rawudp.Tpo -c -o libjabber_la-rawudp.lo `test -f 'jingle/rawudp.c' || echo '$(srcdir)/'`jingle/rawudp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-rawudp.Tpo $(DEPDIR)/libjabber_la-rawudp.Plo
#	$(AM_V_CC)source='jingle/rawudp.c' object='libjabber_la-rawudp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-rawudp.lo `test -f 'jingle/rawudp.c' || echo '$(srcdir)/'`jingle/rawudp.c

libjabber_la-rtp.lo: jingle/rtp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-rtp.lo -MD -MP -MF $(DEPDIR)/libjabber_la-rtp.Tpo -c -o libjabber_la-rtp.lo `test -f 'jingle/rtp.c' || echo '$(srcdir)/'`jingle/rtp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-rtp.Tpo $(DEPDIR)/libjabber_la-rtp.Plo
#	$(AM_V_CC)source='jingle/rtp.c' object='libjabber_la-rtp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-rtp.lo `test -f 'jingle/rtp.c' || echo '$(srcdir)/'`jingle/rtp.c

libjabber_la-session.lo: jingle/session.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-session.lo -MD -MP -MF $(DEPDIR)/libjabber_la-session.Tpo -c -o libjabber_la-session.lo `test -f 'jingle/session.c' || echo '$(srcdir)/'`jingle/session.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-session.Tpo $(DEPDIR)/libjabber_la-session.Plo
#	$(AM_V_CC)source='jingle/session.c' object='libjabber_la-session.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-session.lo `test -f 'jingle/session.c' || echo '$(srcdir)/'`jingle/session.c

libjabber_la-transport.lo: jingle/transport.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-transport.lo -MD -MP -MF $(DEPDIR)/libjabber_la-transport.Tpo -c -o libjabber_la-transport.lo `test -f 'jingle/transport.c' || echo '$(srcdir)/'`jingle/transport.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-transport.Tpo $(DEPDIR)/libjabber_la-transport.Plo
#	$(AM_V_CC)source='jingle/transport.c' object='libjabber_la-transport.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-transport.lo `test -f 'jingle/transport.c' || echo '$(srcdir)/'`jingle/transport.c

libjabber_la-jutil.lo: jutil.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-jutil.lo -MD -MP -MF $(DEPDIR)/libjabber_la-jutil.Tpo -c -o libjabber_la-jutil.lo `test -f 'jutil.c' || echo '$(srcdir)/'`jutil.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-jutil.Tpo $(DEPDIR)/libjabber_la-jutil.Plo
#	$(AM_V_CC)source='jutil.c' object='libjabber_la-jutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-jutil.lo `test -f 'jutil.c' || echo '$(srcdir)/'`jutil.c

libjabber_la-message.lo: message.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-message.lo -MD -MP -MF $(DEPDIR)/libjabber_la-message.Tpo -c -o libjabber_la-message.lo `test -f 'message.c' || echo '$(srcdir)/'`message.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-message.Tpo $(DEPDIR)/libjabber_la-message.Plo
#	$(AM_V_CC)source='message.c' object='libjabber_la-message.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-message.lo `test -f 'message.c' || echo '$(srcdir)/'`message.c

libjabber_la-oob.lo: oob.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-oob.lo -MD -MP -MF $(DEPDIR)/libjabber_la-oob.Tpo -c -o libjabber_la-oob.lo `test -f 'oob.c' || echo '$(srcdir)/'`oob.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-oob.Tpo $(DEPDIR)/libjabber_la-oob.Plo
#	$(AM_V_CC)source='oob.c' object='libjabber_la-oob.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-oob.lo `test -f 'oob.c' || echo '$(srcdir)/'`oob.c

libjabber_la-parser.lo: parser.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-parser.lo -MD -MP -MF $(DEPDIR)/libjabber_la-parser.Tpo -c -o libjabber_la-parser.lo `test -f 'parser.c' || echo '$(srcdir)/'`parser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-parser.Tpo $(DEPDIR)/libjabber_la-parser.Plo
#	$(AM_V_CC)source='parser.c' object='libjabber_la-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-parser.lo `test -f 'parser.c' || echo '$(srcdir)/'`parser.c

libjabber_la-pep.lo: pep.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-pep.lo -MD -MP -MF $(DEPDIR)/libjabber_la-pep.Tpo -c -o libjabber_la-pep.lo `test -f 'pep.c' || echo '$(srcdir)/'`pep.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-pep.Tpo $(DEPDIR)/libjabber_la-pep.Plo
#	$(AM_V_CC)source='pep.c' object='libjabber_la-pep.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-pep.lo `test -f 'pep.c' || echo '$(srcdir)/'`pep.c

libjabber_la-ping.lo: ping.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-ping.lo -MD -MP -MF $(DEPDIR)/libjabber_la-ping.Tpo -c -o libjabber_la-ping.lo `test -f 'ping.c' || echo '$(srcdir)/'`ping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-ping.Tpo $(DEPDIR)/libjabber_la-ping.Plo
#	$(AM_V_CC)source='ping.c' object='libjabber_la-ping.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-ping.lo `test -f 'ping.c' || echo '$(srcdir)/'`ping.c

libjabber_la-presence.lo: presence.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-presence.lo -MD -MP -MF $(DEPDIR)/libjabber_la-presence.Tpo -c -o libjabber_la-presence.lo `test -f 'presence.c' || echo '$(srcdir)/'`presence.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-presence.Tpo $(DEPDIR)/libjabber_la-presence.Plo
#	$(AM_V_CC)source='presence.c' object='libjabber_la-presence.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-presence.lo `test -f 'presence.c' || echo '$(srcdir)/'`presence.c

libjabber_la-roster.lo: roster.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-roster.lo -MD -MP -MF $(DEPDIR)/libjabber_la-roster.Tpo -c -o libjabber_la-roster.lo `test -f 'roster.c' || echo '$(srcdir)/'`roster.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-roster.Tpo $(DEPDIR)/libjabber_la-roster.Plo
#	$(AM_V_CC)source='roster.c' object='libjabber_la-roster.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-roster.lo `test -f 'roster.c' || echo '$(srcdir)/'`roster.c

libjabber_la-si.lo: si.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-si.lo -MD -MP -MF $(DEPDIR)/libjabber_la-si.Tpo -c -o libjabber_la-si.lo `test -f 'si.c' || echo '$(srcdir)/'`si.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-si.Tpo $(DEPDIR)/libjabber_la-si.Plo
#	$(AM_V_CC)source='si.c' object='libjabber_la-si.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-si.lo `test -f 'si.c' || echo '$(srcdir)/'`si.c

libjabber_la-stream_management.lo: stream_management.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-stream_management.lo -MD -MP -MF $(DEPDIR)/libjabber_la-stream_management.Tpo -c -o libjabber_la-stream_management.lo `test -f 'stream_management.c' || echo '$(srcdir)/'`stream_management.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-stream_management.Tpo $(DEPDIR)/libjabber_la-stream_management.Plo
#	$(AM_V_CC)source='stream_management.c' object='libjabber_la-stream_management.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-stream_management.lo `test -f 'stream_management.c' || echo '$(srcdir)/'`stream_management.c

libjabber_la-useravatar.lo: useravatar.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-useravatar.lo -MD -MP -MF $(DEPDIR)/libjabber_la-useravatar.Tpo -c -o libjabber_la-useravatar.lo `test -f 'useravatar.c' || echo '$(srcdir)/'`useravatar.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-useravatar.Tpo $(DEPDIR)/libjabber_la-useravatar.Plo
#	$(AM_V_CC)source='useravatar.c' object='libjabber_la-useravatar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-useravatar.lo `test -f 'useravatar.c' || echo '$(srcdir)/'`useravatar.c

libjabber_la-usermood.lo: usermood.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-usermood.lo -MD -MP -MF $(DEPDIR)/libjabber_la-usermood.Tpo -c -o libjabber_la-usermood.lo `test -f 'usermood.c' || echo '$(srcdir)/'`usermood.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-usermood.Tpo $(DEPDIR)/libjabber_la-usermood.Plo
#	$(AM_V_CC)source='usermood.c' object='libjabber_la-usermood.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-usermood.lo `test -f 'usermood.c' || echo '$(srcdir)/'`usermood.c

libjabber_la-usernick.lo: usernick.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-usernick.lo -MD -MP -MF $(DEPDIR)/libjabber_la-usernick.Tpo -c -o libjabber_la-usernick.lo `test -f 'usernick.c' || echo '$(srcdir)/'`usernick.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-usernick.Tpo $(DEPDIR)/libjabber_la-usernick.Plo
#	$(AM_V_CC)source='usernick.c' object='libjabber_la-usernick.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-usernick.lo `test -f 'usernick.c' || echo '$(srcdir)/'`usernick.c

libjabber_la-usertune.lo: usertune.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-usertune.lo -MD -MP -MF $(DEPDIR)/libjabber_la-usertune.Tpo -c -o libjabber_la-usertune.lo `test -f 'usertune.c' || echo '$(srcdir)/'`usertune.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-usertune.Tpo $(DEPDIR)/libjabber_la-usertune.Plo
#	$(AM_V_CC)source='usertune.c' object='libjabber_la-usertune.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-usertune.lo `test -f 'usertune.c' || echo '$(srcdir)/'`usertune.c

libjabber_la-xdata.lo: xdata.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-xdata.lo -MD -MP -MF $(DEPDIR)/libjabber_la-xdata.Tpo -c -o libjabber_la-xdata.lo `test -f 'xdata.c' || echo '$(srcdir)/'`xdata.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-xdata.Tpo $(DEPDIR)/libjabber_la-xdata.Plo
#	$(AM_V_CC)source='xdata.c' object='libjabber_la-xdata.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-xdata.lo `test -f 'xdata.c' || echo '$(srcdir)/'`xdata.c

libjabber_la-auth_cyrus.lo: auth_cyrus.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-auth_cyrus.lo -MD -MP -MF $(DEPDIR)/libjabber_la-auth_cyrus.Tpo -c -o libjabber_la-auth_cyrus.lo `test -f 'auth_cyrus.c' || echo '$(srcdir)/'`auth_cyrus.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-auth_cyrus.Tpo $(DEPDIR)/libjabber_la-auth_cyrus.Plo
#	$(AM_V_CC)source='auth_cyrus.c' object='libjabber_la-auth_cyrus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-auth_cyrus.lo `test -f 'auth_cyrus.c' || echo '$(srcdir)/'`auth_cyrus.c

libjabber_la-libxmpp.lo: libxmpp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -MT libjabber_la-libxmpp.lo -MD -MP -MF $(DEPDIR)/libjabber_la-libxmpp.Tpo -c -o libjabber_la-libxmpp.lo `test -f 'libxmpp.c' || echo '$(srcdir)/'`libxmpp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libjabber_la-libxmpp.Tpo $(DEPDIR)/libjabber_la-libxmpp.Plo
#	$(AM_V_CC)source='libxmpp.c' object='libjabber_la-libxmpp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libjabber_la_CFLAGS) $(CFLAGS) -c -o libjabber_la-libxmpp.lo `test -f 'libxmpp.c' || echo '$(srcdir)/'`libxmpp.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(pkgdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-pkgLTLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libjabber_la-adhoccommands.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth_cyrus.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth_digest_md5.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth_plain.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth_scram.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-bosh.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-buddy.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-caps.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-chat.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-content.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-data.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-disco.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-gmail.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-google.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-google_presence.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-google_roster.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-google_session.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-ibb.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-iceudp.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-iq.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-jabber.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-jingle.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-jingleinfo.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-jutil.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-libxmpp.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-message.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-oob.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-parser.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-pep.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-ping.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-presence.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-rawudp.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-relay.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-roster.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-rtp.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-session.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-si.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-stream_management.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-transport.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-useravatar.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-usermood.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-usernick.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-usertune.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-xdata.Plo
	-rm -f ./$(DEPDIR)/libxmpp.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libjabber_la-adhoccommands.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth_cyrus.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth_digest_md5.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth_plain.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-auth_scram.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-bosh.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-buddy.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-caps.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-chat.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-content.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-data.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-disco.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-gmail.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-google.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-google_presence.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-google_roster.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-google_session.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-ibb.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-iceudp.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-iq.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-jabber.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-jingle.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-jingleinfo.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-jutil.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-libxmpp.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-message.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-oob.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-parser.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-pep.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-ping.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-presence.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-rawudp.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-relay.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-roster.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-rtp.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-session.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-si.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-stream_management.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-transport.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-useravatar.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-usermood.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-usernick.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-usertune.Plo
	-rm -f ./$(DEPDIR)/libjabber_la-xdata.Plo
	-rm -f ./$(DEPDIR)/libxmpp.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pkgLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-pkgLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkgLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-pkgLTLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
